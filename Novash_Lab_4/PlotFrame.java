import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.*;
import java.util.logging.Logger;

public class PlotFrame extends JFrame {
    private PlotFrame() {
        initComponents();
        this.setTitle("08 - Witch Of Agnesi");
        this.setSize(800, 800);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanel() {
            @Override
            public void paintComponent(Graphics g) {
                Graphics2D g1 = (Graphics2D) g;
                g1.setColor(Color.WHITE);
                g1.fillRect(0, 0, this.getWidth(), this.getHeight());
                g1.setColor(Color.BLACK);
                g1.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                g1.setStroke(new MyStroke(2f));
                g1.translate(getWidth() / 2, getHeight() / 2);
                g1.draw(new CustomShape(250));
                g1.drawString("Witch of Agnesi", getX() + getWidth() / 2 - 30, getY() + getHeight() - 50);
            }
        }
        ;
        jMenuBar1 = new JMenuBar();
        jMenu2 = new JMenu();
        jMenuItem1 = new JMenuItem();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new Color(255, 255, 255));

        GroupLayout jPanel1Layout = new GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGap(0, 279, Short.MAX_VALUE)
        );

        jMenu2.setText("Options");

        jMenuItem1.setText("Print");
        jMenuItem1.addActionListener(this::jMenuItem1ActionPerformed);
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE,
                                GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, GroupLayout.DEFAULT_SIZE,
                                GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        printDemoPage();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    public void printDemoPage() {
        // Create a HardcopyWriter, using a 14 point font and 3/4" margins.
        HardcopyWriter hw;
        try {
            hw = new HardcopyWriter("Decart's leaf", 14, .75, .75, .75, .75);
        } catch (HardcopyWriter.PrintCanceledException e) {
            return;
        }
        // hw.draw(new MyPascal(0.03,300,150,200,50));
        // Send output to it through a PrintWriter stream
        PrintWriter out = new PrintWriter(hw);

        // Figure out the size of the page
        int rows = hw.getLinesPerPage(), cols = hw.getCharactersPerLine();

        // Mark upper left and upper-right corners
        out.print("+"); // upper-left corner
        for (int i = 0; i < cols - 2; i++)
            out.print(" "); // space over
        out.print("+"); // upper-right corner

        // Display a title
        hw.setFontStyle(Font.BOLD + Font.ITALIC);
        out.println("public int currentSegment(double[] coords) {");
        out.println("	coords[0] = a * Math.cos(angle * Math.PI / 180.0) * Math.cos(3 * angle * Math.PI / 180.0);");
        out.println("   coords[1] = a * Math.sin(angle * Math.PI / 180.0) * Math.cos(3 * angle * Math.PI / 180.0);");
        out.println("   	if (angle > 360)");
        out.println("       	done = true;");
        out.println("       if (transform != null)");
        out.println("       	transform.transform(coords, 0, coords, 0, 1);");
        out.println("       if (angle < 1e-5)");
        out.println("          return SEG_MOVETO;");
        out.println("       return SEG_LINETO;");
        out.println("               return SEG_MOVETO;");
        out.println("}");

        // Skip down to the bottom of the page
        for (int i = 0; i < rows - 30; i++)
            out.println();

        // And mark the lower left and lower right
        out.print("+"); // lower-left
        for (int i = 0; i < cols - 2; i++)
            out.print(" "); // space-over
        out.print("+"); // lower-right

        // Close the output stream, forcing the page to be printed
        out.close();
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (UIManager.LookAndFeelInfo info : UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException |
                InstantiationException |
                UnsupportedLookAndFeelException |
                IllegalAccessException ex) {
            Logger.getLogger(PlotFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        EventQueue.invokeLater(() -> new PlotFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JMenu jMenu2;
    private JMenuBar jMenuBar1;
    private JMenuItem jMenuItem1;
    private JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private String[] textLines;
    private int[] pageBreaks;
    private BufferedImage b;
}